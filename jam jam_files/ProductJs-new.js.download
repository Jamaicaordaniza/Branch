/** Shopify CDN: Minification failed

Line 345:6 Transforming let to the configured target environment ("es5") is not supported yet
Line 350:6 Transforming let to the configured target environment ("es5") is not supported yet
Line 351:8 Transforming let to the configured target environment ("es5") is not supported yet
Line 352:8 Transforming let to the configured target environment ("es5") is not supported yet
Line 355:8 Transforming let to the configured target environment ("es5") is not supported yet
Line 356:8 Transforming let to the configured target environment ("es5") is not supported yet
Line 358:6 Transforming let to the configured target environment ("es5") is not supported yet
Line 370:6 Transforming let to the configured target environment ("es5") is not supported yet
Line 372:8 Transforming let to the configured target environment ("es5") is not supported yet
Line 373:8 Transforming let to the configured target environment ("es5") is not supported yet
... and 85 more hidden warnings

**/
// Shopify option_selection.js
function floatToString(t, e) {
	var o = t.toFixed(e).toString();
	return o.match(/^\.\d+/) ? "0" + o : o
}
"undefined" == typeof window.Shopify && (window.Shopify = {}), Shopify.each = function(t, e) {
	for (var o = 0; o < t.length; o++) e(t[o], o)
}, Shopify.map = function(t, e) {
	for (var o = [], i = 0; i < t.length; i++) o.push(e(t[i], i));
	return o
}, Shopify.arrayIncludes = function(t, e) {
	for (var o = 0; o < t.length; o++)
		if (t[o] == e) return !0;
	return !1
}, Shopify.uniq = function(t) {
	for (var e = [], o = 0; o < t.length; o++) Shopify.arrayIncludes(e, t[o]) || e.push(t[o]);
	return e
}, Shopify.isDefined = function(t) {
	return void 0 !== t
}, Shopify.getClass = function(t) {
	return Object.prototype.toString.call(t).slice(8, -1)
}, Shopify.extend = function(t, e) {
	function o() {}
	o.prototype = e.prototype, t.prototype = new o, t.prototype.constructor = t, t.baseConstructor = e, t.superClass = e.prototype
}, Shopify.locationSearch = function() {
	return window.location.search
}, Shopify.locationHash = function() {
	return window.location.hash
}, Shopify.replaceState = function(t) {
	window.history.replaceState({}, document.title, t)
}, Shopify.urlParam = function(t) {
	var e = RegExp("[?&]" + t + "=([^&#]*)").exec(Shopify.locationSearch());
	return e && decodeURIComponent(e[1].replace(/\+/g, " "))
}, Shopify.newState = function(t, e) {
	return (Shopify.urlParam(t) ? Shopify.locationSearch().replace(RegExp("(" + t + "=)[^&#]+"), "$1" + e) : "" === Shopify.locationSearch() ? "?" + t + "=" + e : Shopify.locationSearch() + "&" + t + "=" + e) + Shopify.locationHash()
}, Shopify.setParam = function(t, e) {
	Shopify.replaceState(Shopify.newState(t, e))
}, Shopify.Product = function(t) {
	Shopify.isDefined(t) && this.update(t)
}, Shopify.Product.prototype.update = function(t) {
	for (property in t) this[property] = t[property]
}, Shopify.Product.prototype.optionNames = function() {
	return "Array" == Shopify.getClass(this.options) ? this.options : []
}, Shopify.Product.prototype.optionValues = function(t) {
	if (!Shopify.isDefined(this.variants)) return null;
	var e = Shopify.map(this.variants, function(e) {
		var o = "option" + (t + 1);
		return e[o] == undefined ? null : e[o]
	});
	return null == e[0] ? null : Shopify.uniq(e)
}, Shopify.Product.prototype.getVariant = function(t) {
	var e = null;
	return t.length != this.options.length ? e : (Shopify.each(this.variants, function(o) {
		for (var i = !0, r = 0; r < t.length; r++) {
			o["option" + (r + 1)] != t[r] && (i = !1)
		}
		if (1 == i) return void(e = o)
	}), e)
}, Shopify.Product.prototype.getVariantById = function(t) {
	for (var e = 0; e < this.variants.length; e++) {
		var o = this.variants[e];
		if (t == o.id) return o
	}
	return null
}, Shopify.money_format = "$", Shopify.formatMoney = function(t, e) {
	function o(t, e) {
		return void 0 === t ? e : t
	}

	function i(t, e, i, r) {
		if (e = o(e, 2), i = o(i, ","), r = o(r, "."), isNaN(t) || null == t) return 0;
		t = (t / 100).toFixed(e);
		var n = t.split(".");
		return n[0].replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1" + i) + (n[1] ? r + n[1] : "")
	}
	"string" == typeof t && (t = t.replace(".", ""));
	var r = "",
		n = /\{\{\s*(\w+)\s*\}\}/,
		a = e || this.money_format;
	switch (a.match(n)[1]) {
		case "amount":
			r = i(t, 2);
			break;
		case "amount_no_decimals":
			r = i(t, 0);
			break;
		case "amount_with_comma_separator":
			r = i(t, 2, ".", ",");
			break;
		case "amount_with_space_separator":
			r = i(t, 2, " ", ",");
			break;
		case "amount_with_period_and_space_separator":
			r = i(t, 2, " ", ".");
			break;
		case "amount_no_decimals_with_comma_separator":
			r = i(t, 0, ".", ",");
			break;
		case "amount_no_decimals_with_space_separator":
			r = i(t, 0, " ");
			break;
		case "amount_with_apostrophe_separator":
			r = i(t, 2, "'", ".")
	}
	return a.replace(n, r)
}, Shopify.OptionSelectors = function(t, e) {
	return this.selectorDivClass = "selector-wrapper", this.selectorClass = "single-option-selector", this.variantIdFieldIdSuffix = "-variant-id", this.variantIdField = null, this.historyState = null, this.selectors = [], this.domIdPrefix = t, this.product = new Shopify.Product(e.product), this.onVariantSelected = Shopify.isDefined(e.onVariantSelected) ? e.onVariantSelected : function() {}, this.replaceSelector(t), this.initDropdown(), e.enableHistoryState && (this.historyState = new Shopify.OptionSelectors.HistoryState(this)), !0
}, Shopify.OptionSelectors.prototype.initDropdown = function() {
	var t = {
		initialLoad: !0
	};
	if (!this.selectVariantFromDropdown(t)) {
		var e = this;
		setTimeout(function() {
			e.selectVariantFromParams(t)
		})
	}
}, Shopify.OptionSelectors.prototype.fireOnChangeForFirstDropdown = function(t) {
	this.selectors[0].element.onchange(t)
}, Shopify.OptionSelectors.prototype.selectVariantFromParamsOrDropdown = function(t) {
	this.selectVariantFromParams(t) || this.selectVariantFromDropdown(t)
}, Shopify.OptionSelectors.prototype.replaceSelector = function(t) {
	var e = document.getElementById(t),
		o = e.parentNode;
	Shopify.each(this.buildSelectors(), function(t) {
		o.insertBefore(t, e)
	}), e.style.display = "none", this.variantIdField = e
}, Shopify.OptionSelectors.prototype.selectVariantFromDropdown = function(t) {
	var e = document.getElementById(this.domIdPrefix).querySelector("[selected]");
	if (e || (e = document.getElementById(this.domIdPrefix).querySelector('[selected="selected"]')), !e) return !1;
	var o = e.value;
	return this.selectVariant(o, t)
}, Shopify.OptionSelectors.prototype.selectVariantFromParams = function(t) {
	var e = Shopify.urlParam("variant");
	return this.selectVariant(e, t)
}, Shopify.OptionSelectors.prototype.selectVariant = function(t, e) {
	var o = this.product.getVariantById(t);
	if (null == o) return !1;
	for (var i = 0; i < this.selectors.length; i++) {
		var r = this.selectors[i].element,
			n = r.getAttribute("data-option"),
			a = o[n];
		null != a && this.optionExistInSelect(r, a) && (r.value = a)
	}
	return "undefined" != typeof jQuery ? jQuery(this.selectors[0].element).trigger("change", e) : this.selectors[0].element.onchange(e), !0
}, Shopify.OptionSelectors.prototype.optionExistInSelect = function(t, e) {
	for (var o = 0; o < t.options.length; o++)
		if (t.options[o].value == e) return !0
}, Shopify.OptionSelectors.prototype.insertSelectors = function(t, e) {
	Shopify.isDefined(e) && this.setMessageElement(e), this.domIdPrefix = "product-" + this.product.id + "-variant-selector";
	var o = document.getElementById(t);
	Shopify.each(this.buildSelectors(), function(t) {
		o.appendChild(t)
	})
}, Shopify.OptionSelectors.prototype.buildSelectors = function() {
	for (var t = 0; t < this.product.optionNames().length; t++) {
		var e = new Shopify.SingleOptionSelector(this, t, this.product.optionNames()[t], this.product.optionValues(t));
		e.element.disabled = !1, this.selectors.push(e)
	}
	var o = this.selectorDivClass,
		i = this.product.optionNames();
	return Shopify.map(this.selectors, function(t) {
		var e = document.createElement("div");
		if (e.setAttribute("class", o), i.length > 1) {
			var r = document.createElement("label");
			r.htmlFor = t.element.id, r.innerHTML = t.name, e.appendChild(r)
		}
		return e.appendChild(t.element), e
	})
}, Shopify.OptionSelectors.prototype.selectedValues = function() {
	for (var t = [], e = 0; e < this.selectors.length; e++) {
		var o = this.selectors[e].element.value;
		t.push(o)
	}
	return t
}, Shopify.OptionSelectors.prototype.updateSelectors = function(t, e) {
	var o = this.selectedValues(),
		i = this.product.getVariant(o);
	i ? (this.variantIdField.disabled = !1, this.variantIdField.value = i.id) : this.variantIdField.disabled = !0, this.onVariantSelected(i, this, e), null != this.historyState && this.historyState.onVariantChange(i, this, e)
}, Shopify.OptionSelectorsFromDOM = function(t, e) {
	var o = e.optionNames || [],
		i = e.priceFieldExists || !0,
		r = e.delimiter || "/",
		n = this.createProductFromSelector(t, o, i, r);
	e.product = n, Shopify.OptionSelectorsFromDOM.baseConstructor.call(this, t, e)
}, Shopify.extend(Shopify.OptionSelectorsFromDOM, Shopify.OptionSelectors), Shopify.OptionSelectorsFromDOM.prototype.createProductFromSelector = function(t, e, o, i) {
	if (!Shopify.isDefined(o)) var o = !0;
	if (!Shopify.isDefined(i)) var i = "/";
	var r = document.getElementById(t),
		n = r.childNodes,
		a = (r.parentNode, e.length),
		s = [];
	Shopify.each(n, function(t) {
		if (1 == t.nodeType && "option" == t.tagName.toLowerCase()) {
			var r = t.innerHTML.split(new RegExp("\\s*\\" + i + "\\s*"));
			0 == e.length && (a = r.length - (o ? 1 : 0));
			var n = r.slice(0, a),
				p = o ? r[a] : "",
				l = (t.getAttribute("value"), {
					available: !t.disabled,
					id: parseFloat(t.value),
					price: p,
					option1: n[0],
					option2: n[1],
					option3: n[2]
				});
			s.push(l)
		}
	});
	var p = {
		variants: s
	};
	if (0 == e.length) {
		p.options = [];
		for (var l = 0; l < a; l++) p.options[l] = "option " + (l + 1)
	} else p.options = e;
	return p
}, Shopify.SingleOptionSelector = function(t, e, o, i) {
	this.multiSelector = t, this.values = i, this.index = e, this.name = o, this.element = document.createElement("select");
	for (var r = 0; r < i.length; r++) {
		var n = document.createElement("option");
		n.value = i[r], n.innerHTML = i[r], this.element.appendChild(n)
	}
	return this.element.setAttribute("class", this.multiSelector.selectorClass), this.element.setAttribute("data-option", "option" + (e + 1)), this.element.id = t.domIdPrefix + "-option-" + e, this.element.onchange = function(o, i) {
		i = i || {}, t.updateSelectors(e, i)
	}, !0
}, Shopify.Image = {
	preload: function(t, e) {
		for (var o = 0; o < t.length; o++) {
			var i = t[o];
			this.loadImage(this.getSizedImageUrl(i, e))
		}
	},
	loadImage: function(t) {
		(new Image).src = t
	},
	switchImage: function(t, e, o) {
		if (t && e) {
			var i = this.imageSize(e.src),
				r = this.getSizedImageUrl(t.src, i);
			o ? o(r, t, e) : e.src = r
		}
	},
	imageSize: function(t) {
		var e = t.match(/.+_((?:pico|icon|thumb|small|compact|medium|large|grande)|\d{1,4}x\d{0,4}|x\d{1,4})[_\.@]/);
		return null !== e ? e[1] : null
	},
	getSizedImageUrl: function(t, e) {
		if (null == e) return t;
		if ("master" == e) return this.removeProtocol(t);
		var o = t.match(/\.(jpg|jpeg|gif|png|bmp|bitmap|tiff|tif)(\?v=\d+)?$/i);
		if (null != o) {
			var i = t.split(o[0]),
				r = o[0];
			return this.removeProtocol(i[0] + "_" + e + r)
		}
		return null
	},
	removeProtocol: function(t) {
		return t.replace(/http(s)?:/, "")
	}
}, Shopify.OptionSelectors.HistoryState = function(t) {
	this.browserSupports() && this.register(t)
}, Shopify.OptionSelectors.HistoryState.prototype.register = function(t) {
	window.addEventListener("popstate", function() {
		t.selectVariantFromParamsOrDropdown({
			popStateCall: !0
		})
	})
}, Shopify.OptionSelectors.HistoryState.prototype.onVariantChange = function(t, e, o) {
	this.browserSupports() && (!t || o.initialLoad || o.popStateCall || Shopify.setParam("variant", t.id))
}, Shopify.OptionSelectors.HistoryState.prototype.browserSupports = function() {
	return window.history && window.history.replaceState
};

var ProductJsNew = function( item, product, isQuickView ) {
    var optionsMap = {};
    var optionsMapAll = {};
    var productJs = this;
    var stickyATC = $('#stickyATC');
    var mobileStickyAtc = $('#mobile-sticky-atc');
	var productOptions = product.options.map(function(e){return e.toLowerCase()});
    productJs.config = {
      gallery:{
        galleryGroupByOptions: 'fabric color, top color, seat color, frame color, desk color, leg color, chair color, stand color, cord color, color, orientation, seat, drawer size, power, panel type, desk size, accessories color, chair/headrest color, style, base color, configuration, height'.split(',').map(function(s) { return s.trim() }).filter(function(v){return v!=='' && productOptions.indexOf(v)>-1}),
        galleryGroupMatchMode: 4 //1 Match Everything, 2 Match Any, 4 Exclusive OR  
      }
    };

    var init = function() {
      if(!item.hasClass('initialized')) {
        item.data('productjs', productJs);
        initVariantStatus();
        initializeVariantSelector();
        
        item.on('galleryLoaded', function(){
        	item.data('fullLoaded', true);
          	item.trigger('productLoaded');
        });
        initGallery('main');
        if(isQuickView){
          initGallery('quickView')
        }

        item.addClass('initialized');
      }
    };

    var initVariantStatus = function() {
      $.each(product.variants, function(key, variant){
        //AVAILABLE
        if(variant.available) {
          variant.status = 'available';
        } else {
          //SOLDOUT
          variant.status = 'soldout';
        }
      });
    };

    window.Branch = window.Branch || {};
    window.Branch.product = window.Branch.product || {};
    window.Branch.product.isTouchDevice = function() {
      return (('ontouchstart' in window) ||
         (navigator.maxTouchPoints > 0) ||
         (navigator.msMaxTouchPoints > 0));
    }

    productJs.saleTagUpdate = function(variant, variantSwatchValue){
      let message = '';

      


      let discountObject = productJs.getDiscountAmountMessage();
        let discountAmount = discountObject.discount_code_amount;
        let discountMessage = discountObject.discount_code_message;


        let originalPrice = window.Branch.product.getOriginalPrice(variant, discountAmount);
        let currentPrice = window.Branch.product.getCurrentPrice(variant, discountAmount);

      let percentageOff = 0


      if(originalPrice && currentPrice < originalPrice){
        percentageOff = Math.round(parseFloat(((originalPrice - currentPrice) * 100) / originalPrice))
        message = `save ${parseInt(percentageOff)}%`;
      }

      

      

      let productTags = product.tags.join(',').toLowerCase();
      if(document.querySelector(`#variant_ship_date_metafield_values--${product.id}`)){
        let ship_date_metafield_value = JSON.parse(document.querySelector(`#variant_ship_date_metafield_values--${product.id}`).innerText)[`${variant.id}`];
        let ship_date_show_available = false;
        if(document.querySelector(`#variant_ship_date_show_available--${product.id}`)){
          ship_date_show_available = JSON.parse(document.querySelector(`#variant_ship_date_show_available--${product.id}`).innerText)[`${variant.id}`] == 'true';
        }
        let msbdMessage = document.querySelector(`#product-item-${product.id} .msbd-message[data-product-id="${product.id}"]`);
        let oosMessage = 'Ships within 4-6 weeks';
        let msbdInput = msbdMessage.querySelector(`#msbd-message__input--${product.id}`);
        if(!variant.available && !productTags.includes('bundle')){
          msbdMessage.setAttribute('data-available', 'false');
          if(!isQuickView){
            msbdMessage.querySelector(`.msbd-message__text--oos`).setAttribute('aria-hidden', 'false');
            msbdMessage.querySelector(`.msbd-message__text--available`).setAttribute('aria-hidden', 'true');  
          }
          msbdInput.setAttribute('value', oosMessage)
        } else {
          msbdMessage.setAttribute('data-available', 'true');
          if(!isQuickView){
            msbdMessage.querySelector(`.msbd-message__text--oos`).setAttribute('aria-hidden', 'true');
            msbdMessage.querySelector(`.msbd-message__text--available`).setAttribute('aria-hidden', 'false');
          }
          msbdInput.setAttribute('value', ship_date_metafield_value)
        }

        msbdInput.setAttribute('data-variant-id', variant.id)
        if(!isQuickView){
          msbdMessage.querySelector(`.msbd-message__text--available span.msbd-message__ship-date-span`).innerHTML = `${ship_date_show_available ? '<strong aria-hidden="true">Available | </strong>' : ''} ${ship_date_metafield_value}`;
        }
      }

      

      if(document.querySelector(`#variant_metafield_values--${product.id}`)){
        const metafield_value = JSON.parse(document.querySelector(`#variant_metafield_values--${product.id}`).innerText)[`${variant.id}`];

       
        let sales_tags = document.querySelectorAll(`.product-gallery.product-gallery--${ product.id } .active-wrapper .sale`);
        if (metafield_value !== 'no_metafield_value'){
          message = metafield_value;
          percentageOff = 0;
        } else if (sales_tags[0].getAttribute('data-mf-swatch-text') && sales_tags[0].getAttribute('data-mf-swatch-text') !== ""){
          message = sales_tags[0].getAttribute('data-mf-swatch-text');
          percentageOff = 0;
        }
        if(message !== '' && !variantSwatchValue){
          if(item){
            let preOrderSwatch = item.find('.pre-order-swatch[data-discount-code="true"]')[0];
            if(preOrderSwatch){
              if(percentageOff > 0){
                if(preOrderSwatch.querySelector('.pre-order-swatch-amount')){
                    preOrderSwatch.querySelector('.pre-order-swatch-amount').innerHTML = `${parseInt(percentageOff)}`;
                    preOrderSwatch.setAttribute('data-display', 'true');
                }
              }
            }
          }
          sales_tags.forEach((sales_tag) => {
            sales_tag.innerText = message;
            sales_tag.classList.add('sale--display');
           
            

            
          })
        } else {
          sales_tags.forEach((sales_tag) => {
            sales_tag.innerText = '';
            sales_tag.classList.remove('sale--display');
          })
        }
      };

    }

    productJs.filterThumbs = function(objectOptions, optionsContainer, gallery) {
      //Example reference:
      //objectOptions: product.options
      //optionsContainer: variant;
      //gallery: jQuery object of the gallery, ex. $('.thumbs'), $('.main-images'), etc.

      var galleryOptions = productJs.config.gallery;
      var groupOptionProperties = [];
      $(galleryOptions.galleryGroupByOptions).each(function (ix, e){
        $(objectOptions).each(function(ix2,e2){
          if (Simplistic.handleize(e) == Simplistic.handleize(e2))
            groupOptionProperties.push('option'+(1+ix2))
        })
      })

      
      if(groupOptionProperties.length>0) {
        gallery.find('.slideVisible').removeClass('slideVisible');

        var slideSelector = '';
        
        $(groupOptionProperties).each(function(ix,e){
          var part1Selector = '';
          var part2Selector = '';
          if(slideSelector=='' || galleryOptions.galleryGroupMatchMode>=2)
            part1Selector += ' .gallery-item';

          part1Selector += '[data-'+Simplistic.handleize(galleryOptions.galleryGroupByOptions[ix])+'*="_'+Simplistic.handleize(optionsContainer[e])+'_"]';
          if (galleryOptions.galleryGroupMatchMode==4) {
            part2Selector = ', ' +part1Selector;
            $(groupOptionProperties).each(function(ix2,e2){
              if (e2!=e) {
                part1Selector += ':not([data-'+Simplistic.handleize(galleryOptions.galleryGroupByOptions[ix2])+'])';
                part2Selector += '[data-'+Simplistic.handleize(galleryOptions.galleryGroupByOptions[ix2])+'*="_'+Simplistic.handleize(optionsContainer[e2])+'_"]';
              }
            });
          }
          slideSelector += (slideSelector=='' || galleryOptions.galleryGroupMatchMode==1 ? '' : ', ') + part1Selector + part2Selector;
        });

        //Show the images that don't have any of the galleryGroupByOptions
        var withoutAltSelector = ' .gallery-item';
        $(galleryOptions.galleryGroupByOptions).each(function(){
          withoutAltSelector += ':not([data-'+Simplistic.handleize(this)+'])';
        });
        slideSelector += ', ' + withoutAltSelector;

        var sortCompare = function(a,b){
            akey = parseInt($(a).attr("data-index"));
            bkey = parseInt($(b).attr("data-index"));
            if (akey == bkey) return 0;
            if (akey < bkey) return -1;
            if (akey > bkey) return 1;
        };
        
        gallery.find(slideSelector).sortDomElements(sortCompare).addClass('slideVisible');
      }else{
        gallery.find('.gallery-item').addClass('slideVisible');
      }
      
      if(gallery.parent().hasClass('swiper-initialized')) {
        
        if(gallery.parent().attr('data-quick-view') == "false"){
          swiper.slideTo(0);
        } else {
          quickViewSwiper.slideTo(0)
        }
      } else {
        gallery.find('.slideVisible').each(function(key, object){
          $(this).removeClass('whole half');
          if(gallery.find('.slideVisible').size() <=3 || $(this).hasClass('is-video')){
            $(this).addClass('whole');
          }else{
            
            if(key%3 == 0){
              $(this).addClass('whole');
            }else{
              $(this).addClass('half');
            }
          }
        });
        if(gallery.find('.slideVisible:last').hasClass('half') && gallery.find('.slideVisible:last').prevAll('.slideVisible:first').hasClass('whole')){
           gallery.find('.slideVisible:last').removeClass('half').addClass('whole');
        }
      }

    }

    var initializeVariantSelector = function() {
      var variantSelectorId = "product-select-"+product.id;
      var selectCallback = onVariantSelected();


      new Shopify.OptionSelectors(variantSelectorId, { product: product, onVariantSelected: selectCallback });

      if(product.options.length > 1) {
        if(product.variants.length > 1) {
          linkOptionSelectors(product);
        }

        // Add label if only one product option and it isn't 'Title'.
        if(product.options.length == 1 && product.options[0] != 'Title') {
          item.find('.selector-wrapper:eq(0)').prepend('<label>'+product.options[0]+'</label>');
        }

        item.find('.selector-wrapper label').append(':');
      } else {
        if(product.variants.length > 1) {
          item.find('.select-variant').change(function(){
            var variantSelected = false;
            $.each(product.variants, function(key, variant){
              if(variant.id==item.find('.select-variant').val()) {
                variantSelected = variant;
                return;
              }
            });
            selectCallback(variantSelected, null);
          });
        }
      }item.find('.swatch :radio').change(function() {
          var optionIndex = $(this).closest('.swatch').attr('data-option-index');
          var optionValue = $(this).val();
          $(this).closest('form').find('.single-option-selector').eq(optionIndex).val(optionValue).trigger('change');
        });
        stickyATC.find('.swatch :radio').change(function() {
          var optionIndex = $(this).closest('.swatch').attr('data-option-index');
          var optionValue = $(this).val();
          
          item.find('form').find('.single-option-selector').eq(optionIndex).val(optionValue).trigger('change');
        });
        mobileStickyAtc.find('.swatch-dropdown__sliding-option-selector-outer-container :radio').change(function() {
          var optionIndex = $(this).closest('.swatch-dropdown__sliding-option-selector-outer-container').attr('data-option-index');
          var optionValue = $(this).val();

          item.find('form').find('.single-option-selector').eq(optionIndex).val(optionValue).trigger('change');
        });if(product.variants.length==1) {
        selectCallback(product.variants[0], null);
      } else {productJs.setVariant(productJs.getFirstAvailableVariant());}
    };

    productJs.getFirstAvailableVariant = function() {
      let noAvailableVariants = true
      for(var i=0; i < product.variants.length; i++){ 
        if(product.variants[i].available)
        noAvailableVariants = false;
          return product.variants[i];
      }    
      if(noAvailableVariants == true){
        return product.variants[0];
      }
    };
  
    productJs.getVariantBySku = function(sku) {
      for(var i=0; i < product.variants.length; i++){ 
        if(product.variants[i].sku == sku)
          return product.variants[i];
      }    
    };

    productJs.getVariantById = function(id) {
      for(var i=0; i < product.variants.length; i++){ 
        if(product.variants[i].id == id) {
          return product.variants[i];
        }
      }
    };

    productJs.getCurrentVariant = function() {
      var variantId = item.find('[name="id[]"]').val();
        if(variantId!="") {
          return productJs.getVariantById(variantId);
        } else {
          return false;
        }
    };

    
    window.Branch = window.Branch || {};
    window.Branch.product = window.Branch.product || {};

    window.Branch.product.getOriginalPrice = function(currentVariant, discount_code_amount){
      var originalPriceAmount = null;
      if(currentVariant.compare_at_price != null){
        if(currentVariant.compare_at_price > currentVariant.price) {
          var originalPriceAmount = currentVariant.compare_at_price;
        } else if (discount_code_amount > 0) {
          var originalPriceAmount = currentVariant.price;
        } 
      } else {
        if (discount_code_amount > 0) {
          var originalPriceAmount = currentVariant.price;
        } 
      }

      return originalPriceAmount;
    }

    window.Branch.product.getCurrentPrice = function(currentVariant, discount_code_amount){
      if (discount_code_amount > 0) {
        var currentPriceAmount =  Math.floor(((100.0 - discount_code_amount) * currentVariant.price) / 100.0);
      } else {
        var currentPriceAmount = currentVariant.price;
      }
      return currentPriceAmount;
    }

    productJs.getDiscountAmountMessage = function(){
      var discount_code_amount = 0;
      var discount_code_message = '';
        
        

        

        

        let discountObject = {'discount_code_amount': discount_code_amount, 'discount_code_message': discount_code_message}

        return discountObject;
    }

      productJs.updateDiscountCodePrice = function(variant) {

        let discountCodeMessageQuickView = document.querySelector('.product-info .discount_code_message');
        
        let discountObject = productJs.getDiscountAmountMessage();
        let discountAmount = discountObject.discount_code_amount;
        let discountMessage = discountObject.discount_code_message;


        let originalPrice = window.Branch.product.getOriginalPrice(variant, discountAmount);
        let currentPrice = window.Branch.product.getCurrentPrice(variant, discountAmount);

        item.find('[data-price="deal"]').html(Shopify.formatMoney((100 * parseInt(window.Branch.product.getCurrentPrice(variant, discountAmount)/100)), Simplistic.formatMoney).replace('.00', '').replace(' ',''));
        
        if(originalPrice != null){
          var retailPrice = Shopify.formatMoney(originalPrice, Simplistic.formatMoney).replace('.00', '').replace(' ','');
          var percentDiscount = Math.round( (((originalPrice - currentPrice) * 100 ) / originalPrice) );
          var moneyDiscount = Shopify.formatMoney((originalPrice - currentPrice), Simplistic.formatMoney).replace('.00', '').replace(' ','');
                      
          var modifiedMessage = discountMessage.replace('<p>',`<p>Save ${percentDiscount}% `)

          item.find('[data-price="retail"]').html(retailPrice);
          item.find('.retail:not(.pdp-bundle__retail)').css('display', 'inline-block');
          item.find('[data-price="off-percent"]').html(percentDiscount+'%');
          item.find('[data-price="discount-code-off-percent"]').html(modifiedMessage);
          item.find('[data-price="off-amount"]').html(moneyDiscount);

        } else {
          item.find('[data-price="retail"]').html('');
          item.find('.retail:not(.pdp-bundle__retail)').css('display', "none");
          item.find('[data-price="off-percent"]').html('');
          item.find('[data-price="off-amount"]').html('');
          item.find('[data-price="discount-code-off-percent"]').html('');
        }
      };

    

    productJs.getProduct = function() {
      return product;
    };

	productJs.getCurrentVariantOption = function(option) {
      var value = '';
      $.each(product.options, function(key, val){
        if(val.toUpperCase()==option.toUpperCase()) {
          value = productJs.getCurrentVariant()[('option'+(key+1))];
        }
      });
      return value;
    };

    productJs.setVariant = function(variant){
      if(variant) {
        if(!isNaN(variant)) {
          variant = productJs.getVariantById(variant);
        }
        item.find('.single-option-selector').each(function(){
          var selector = this;
          var option = $(selector).data('option');
          $(selector).find('option').each(function(){
            if(this.value == variant[option]){
              $(selector).val(this.value).trigger('change');
              return;
            }
          });
        });
      }
    };
  
    var onVariantSelected = function() {
      return function(variant, selector) {
        var start = new Date().getTime();
        if(variant && variant.id) {
          let variantSwatchValue = false;

          const bundleProduct = product.tags && product.tags.includes("bundle") ? true : false;
          if(bundleProduct){
            window.Branch.bundleScripts.updateBundleCartData(variant, product.id);
          }

          if(document.querySelector(`#custom_product_tab_data[data-product-id="${product.id}"]`)){
            let custom_product_tab_data = JSON.parse(document.querySelector(`#custom_product_tab_data[data-product-id="${product.id}"]`).innerText);
            let customProductTabTextList = document.querySelectorAll(`.product-tabs-container-${product.id} .tabs-content .content .custom-product-tab-text`);
            if(customProductTabTextList.length > 0){
              customProductTabTextList.forEach((customProductTabText) => {
                customProductTabText.parentElement.querySelector('.tabs-content__ul').setAttribute('style', 'display: block;');
                customProductTabText.remove();
              })
            }
            if(custom_product_tab_data[`${variant.id}`]){
              let tab_1 = decodeURIComponent(custom_product_tab_data[`${variant.id}`].tab_1).replaceAll('+', ' ');
              let tab_2 = decodeURIComponent(custom_product_tab_data[`${variant.id}`].tab_2).replaceAll('+', ' ');
              
              let contentTabs = document.querySelectorAll(`.product-tabs-container-${product.id} .tabs-content .content`);
              if(contentTabs.length > 1){
                let content_1 = contentTabs[0];
                let content_2 = contentTabs[1];

                if(tab_1 != 'default') {
                  content_1.insertAdjacentHTML('beforeend', tab_1);
                  content_1.querySelector('.tabs-content__ul').setAttribute('style', 'display: none;');
                }
                
                if(tab_2 != 'default') {
                  content_2.insertAdjacentHTML('beforeend', tab_2);
                  content_2.querySelector('.tabs-content__ul').setAttribute('style', 'display: none;');
                }
              }
            } 
          }

          if(document.querySelector(`#variant-level-swatch-data--${product.id}`)){
            let pdp_swatch_metafield_value = JSON.parse(document.querySelector(`#variant-level-swatch-data--${product.id}`).innerText);
            let variant_swatch_value = pdp_swatch_metafield_value[`${variant.id}`];
           
            let product_swatch_value = pdp_swatch_metafield_value[`product_wide`];
            let preOrderSwatch = document.querySelector(`.pre-order-swatch[data-product-id="${product.id}"]`);
            
            
            if(variant_swatch_value){
              variantSwatchValue = true;
              let variant_swatch_text_value = variant_swatch_value['swatch_text'];
              let variant_swatch_tooltip_value = variant_swatch_value['tooltip_text'];
              preOrderSwatch.querySelector('span').innerHTML = `${variant_swatch_text_value}  <svg aria-hidden="true" tabindex="-1" role="presentation" class=" icon icon-tooltip" viewBox="0 0 18 17"><path fill-rule="evenodd" clip-rule="evenodd" d="M9.26191 16.8867C14.0714 16.8867 17.9702 13.1436 17.9702 8.52635C17.9702 3.90907 14.0714 0.166016 9.26191 0.166016C4.45243 0.166016 0.553574 3.90907 0.553574 8.52635C0.553574 13.1436 4.45243 16.8867 9.26191 16.8867ZM8.01518 8.62759C7.85935 8.77719 7.78143 8.9664 7.78143 9.19521V10.1984C7.78143 10.4273 7.85935 10.6209 8.01518 10.7793C8.17101 10.9289 8.3681 11.0037 8.60643 11.0037C8.84476 11.0037 9.04185 10.9289 9.19768 10.7793C9.35351 10.6209 9.43143 10.4273 9.43143 10.1984V9.71003C9.43143 9.69243 9.43601 9.67923 9.44518 9.67043L9.50018 9.64403C9.89435 9.58242 10.2564 9.48122 10.5864 9.34042C10.9256 9.19081 11.2189 8.9972 11.4664 8.75959C11.7231 8.51318 11.9202 8.22277 12.0577 7.88836C12.1952 7.54514 12.2639 7.15353 12.2639 6.71351C12.2639 6.12388 12.1127 5.59586 11.8102 5.12944C11.5077 4.66302 11.0998 4.29341 10.5864 4.0206C10.0823 3.73899 9.51393 3.59818 8.88143 3.59818C8.37726 3.59818 7.9006 3.69059 7.45143 3.87539C7.01143 4.0514 6.62643 4.30221 6.29643 4.62782C6.10393 4.81263 6.01685 5.01504 6.03518 5.23505C6.05351 5.45506 6.17268 5.64426 6.39268 5.80267C6.60351 5.95228 6.80976 6.00068 7.01143 5.94788C7.22226 5.88627 7.40101 5.79387 7.54768 5.67067C7.73101 5.52106 7.93268 5.40226 8.15268 5.31425C8.38185 5.22625 8.62476 5.18225 8.88143 5.18225C9.21143 5.18225 9.50476 5.24825 9.76143 5.38025C10.0273 5.51226 10.2335 5.69267 10.3802 5.92148C10.536 6.15029 10.6139 6.4143 10.6139 6.71351C10.6139 7.11832 10.5223 7.44394 10.3389 7.69035C10.1648 7.93676 9.92643 8.11717 9.62393 8.23157C9.32143 8.33717 8.98226 8.38998 8.60643 8.38998C8.3681 8.38998 8.17101 8.46918 8.01518 8.62759ZM7.91893 13.1686C8.0656 13.3006 8.27185 13.3666 8.53768 13.3666H8.71643C8.98226 13.3666 9.18393 13.3006 9.32143 13.1686C9.4681 13.0278 9.54143 12.8298 9.54143 12.5745V12.3501C9.54143 12.0949 9.4681 11.9013 9.32143 11.7693C9.18393 11.6285 8.98226 11.5581 8.71643 11.5581H8.53768C8.27185 11.5581 8.0656 11.6285 7.91893 11.7693C7.78143 11.9013 7.71268 12.0949 7.71268 12.3501V12.5745C7.71268 12.8298 7.78143 13.0278 7.91893 13.1686Z" fill="white"/></svg>`
              preOrderSwatch.querySelector('span').setAttribute('data-tooltip', `${variant_swatch_tooltip_value}`) 
              preOrderSwatch.setAttribute('data-display', 'true')
            } else if (product_swatch_value){
              let product_swatch_text_value = product_swatch_value['swatch_text'];
              let product_swatch_tooltip_value = product_swatch_value['tooltip_text'];
              preOrderSwatch.querySelector('span').innerHTML = `${product_swatch_text_value}  <svg aria-hidden="true" tabindex="-1" role="presentation" class=" icon icon-tooltip" viewBox="0 0 18 17"><path fill-rule="evenodd" clip-rule="evenodd" d="M9.26191 16.8867C14.0714 16.8867 17.9702 13.1436 17.9702 8.52635C17.9702 3.90907 14.0714 0.166016 9.26191 0.166016C4.45243 0.166016 0.553574 3.90907 0.553574 8.52635C0.553574 13.1436 4.45243 16.8867 9.26191 16.8867ZM8.01518 8.62759C7.85935 8.77719 7.78143 8.9664 7.78143 9.19521V10.1984C7.78143 10.4273 7.85935 10.6209 8.01518 10.7793C8.17101 10.9289 8.3681 11.0037 8.60643 11.0037C8.84476 11.0037 9.04185 10.9289 9.19768 10.7793C9.35351 10.6209 9.43143 10.4273 9.43143 10.1984V9.71003C9.43143 9.69243 9.43601 9.67923 9.44518 9.67043L9.50018 9.64403C9.89435 9.58242 10.2564 9.48122 10.5864 9.34042C10.9256 9.19081 11.2189 8.9972 11.4664 8.75959C11.7231 8.51318 11.9202 8.22277 12.0577 7.88836C12.1952 7.54514 12.2639 7.15353 12.2639 6.71351C12.2639 6.12388 12.1127 5.59586 11.8102 5.12944C11.5077 4.66302 11.0998 4.29341 10.5864 4.0206C10.0823 3.73899 9.51393 3.59818 8.88143 3.59818C8.37726 3.59818 7.9006 3.69059 7.45143 3.87539C7.01143 4.0514 6.62643 4.30221 6.29643 4.62782C6.10393 4.81263 6.01685 5.01504 6.03518 5.23505C6.05351 5.45506 6.17268 5.64426 6.39268 5.80267C6.60351 5.95228 6.80976 6.00068 7.01143 5.94788C7.22226 5.88627 7.40101 5.79387 7.54768 5.67067C7.73101 5.52106 7.93268 5.40226 8.15268 5.31425C8.38185 5.22625 8.62476 5.18225 8.88143 5.18225C9.21143 5.18225 9.50476 5.24825 9.76143 5.38025C10.0273 5.51226 10.2335 5.69267 10.3802 5.92148C10.536 6.15029 10.6139 6.4143 10.6139 6.71351C10.6139 7.11832 10.5223 7.44394 10.3389 7.69035C10.1648 7.93676 9.92643 8.11717 9.62393 8.23157C9.32143 8.33717 8.98226 8.38998 8.60643 8.38998C8.3681 8.38998 8.17101 8.46918 8.01518 8.62759ZM7.91893 13.1686C8.0656 13.3006 8.27185 13.3666 8.53768 13.3666H8.71643C8.98226 13.3666 9.18393 13.3006 9.32143 13.1686C9.4681 13.0278 9.54143 12.8298 9.54143 12.5745V12.3501C9.54143 12.0949 9.4681 11.9013 9.32143 11.7693C9.18393 11.6285 8.98226 11.5581 8.71643 11.5581H8.53768C8.27185 11.5581 8.0656 11.6285 7.91893 11.7693C7.78143 11.9013 7.71268 12.0949 7.71268 12.3501V12.5745C7.71268 12.8298 7.78143 13.0278 7.91893 13.1686Z" fill="white"/></svg>`
              preOrderSwatch.querySelector('span').setAttribute('data-tooltip', `${product_swatch_tooltip_value}`);
              preOrderSwatch.setAttribute('data-display', 'true');
            } else if(preOrderSwatch.getAttribute('data-discount-code') == "true") {
              preOrderSwatch.querySelector('span').innerHTML = `${preOrderSwatch.getAttribute('data-text-fallback')}`;
              preOrderSwatch.querySelector('span').setAttribute('data-tooltip', `${preOrderSwatch.getAttribute('data-tooltip-fallback')}`);
              preOrderSwatch.setAttribute('data-display', 'true');
            } else {
              preOrderSwatch.querySelector('span').innerHTML = ``
              preOrderSwatch.querySelector('span').setAttribute('data-tooltip', ``);
              preOrderSwatch.setAttribute('data-display', 'false');
            }
          }

          let pdpFeaturesSection = document.querySelector(".pdp-features");
          if(pdpFeaturesSection){
            let altVariantImages = pdpFeaturesSection.querySelectorAll(`.pdp-features__slide-media[data-variant-id="${variant.id}"]`);
            let allDefaultImages = pdpFeaturesSection.querySelectorAll(`.pdp-features__slide-media.pdp-features__slide-media--default`);
            let allNonDefaultImages = pdpFeaturesSection.querySelectorAll(`.pdp-features__slide-media:not(.pdp-features__slide-media--default)`);
            
            let altVariantSubtitles = pdpFeaturesSection.querySelectorAll(`.pdp-features__slide-subtitle[data-variant-id="${variant.id}"]`);
            let allDefaultSubtitles = pdpFeaturesSection.querySelectorAll(`.pdp-features__slide-subtitle.pdp-features__slide-subtitle--default`);
            let allNonDefaultSubtitles = pdpFeaturesSection.querySelectorAll(`.pdp-features__slide-subtitle:not(.pdp-features__slide-subtitle--default)`);
            

            allDefaultImages.forEach((defaultImage) => {
              defaultImage.style.display = "block"
            });

            allDefaultSubtitles.forEach((defaultSubtitle) => {
              defaultSubtitle.style.display = "block"
            })

            if(allNonDefaultImages.length > 0 ){
              allNonDefaultImages.forEach(( nonDefaultImage) => {
                nonDefaultImage.style.display = "none"
              })
            }

            if(allNonDefaultSubtitles.length > 0 ){
              allNonDefaultSubtitles.forEach(( nonDefaultSubtitle) => {
                nonDefaultSubtitle.style.display = "none"
              })
            }
            
            if(altVariantImages.length > 0){
              altVariantImages.forEach((altVariantImage) => {
                altVariantImage.parentElement.querySelectorAll('.pdp-features__slide-media').forEach((slideMedia) => {
                  slideMedia.style.display = 'none';
                })
                altVariantImage.style.display = "block";
              })
            } 

            if(altVariantSubtitles.length > 0){
              altVariantSubtitles.forEach((altVariantSubtitle) => {
                altVariantSubtitle.parentElement.querySelectorAll('.pdp-features__slide-subtitle').forEach((slideSubtitle) => {
                  slideSubtitle.style.display = 'none';
                })
                altVariantSubtitle.style.display = "block";
              })
            } 
          }

          if(window.Branch && window.Branch.pdp && window.Branch.pdp.calloutChangeOnVariantSelect) {
            window.Branch.pdp.calloutChangeOnVariantSelect(variant.id, product.id);
          }

          let price = variant.price;

          
            let discountObject = productJs.getDiscountAmountMessage();
            let discountAmount = discountObject.discount_code_amount;
    
    
            price = window.Branch.product.getCurrentPrice(variant, discountAmount);
           
//Swatches code
            var form = item.find('form');
            
            for(var i=0,length=variant.options.length; i<length; i++) {
              var radioButton = form.find('.swatch[data-option-index="' + i + '"] :radio[value="' + variant.options[i] +'"]');
              var radioButtonSticky = stickyATC.find('.swatch[data-option-index="' + i + '"] :radio[value="' + variant.options[i] +'"]');
              var radioButtonMobileSticky = mobileStickyAtc.find('.swatch-dropdown__sliding-option-selector-outer-container[data-option-index="' + i + '"] :radio[value="' + variant.options[i] +'"]');
              if(radioButton.length > 0) {
                radioButton.get(0).checked = true;

                if(radioButtonMobileSticky && radioButtonMobileSticky.get(0)){
                  radioButtonMobileSticky.get(0).checked = true;
                  let dropdowns = document.querySelectorAll('.mobile-sticky-atc__options .swatch-dropdown');
                  if(dropdowns.length > 0){
                    let dropdown = dropdowns[radioButtonMobileSticky[0].getAttribute('name').replace("option-mobile-sticky-", "")];
                    if(dropdown){
                      let label = dropdown.querySelector('label');
                      let value = radioButtonMobileSticky[0].getAttribute('value');
                      label.setAttribute('data-option-value', `${value.replace(" ", "-").toLowerCase()}`);
                      if(label.getAttribute('data-type') == "color"){
                        label.classList = `swatch-dropdown__bar-label swatch-dropdown__bar-label--selected  color-${value.replaceAll(" ", "-").replaceAll("/", "-").toLowerCase()}`;
                      } else {
                        let xsLabel = value.replaceAll(" inches", "″").replaceAll(" Inches", "″");
                        let xsLabelArray = value.replaceAll(" inches", " inches #").replaceAll(" Inches", " Inches #").split('#');
                        if(xsLabelArray.length > 1){
                          xsLabelArray.splice(1, 1)
                          xsLabel = xsLabelArray.join().replaceAll(" inches", "″").replaceAll(" Inches", "″").replaceAll(",", "")
                        }
                        value.replaceAll(" inches", " inches #").replaceAll(" Inches", " Inches #").split('#').slice(1).join().replaceAll(" inches", "″").replaceAll(" Inches", "″");
                        
                        label.querySelector('span.swatch-dropdown__bar-label-option-value:not(.swatch-dropdown__bar-label-option-value--xs)').innerHTML = `${value.replaceAll(" inches", "″").replaceAll(" Inches", "″")}`;
                        label.querySelector('span.swatch-dropdown__bar-label-option-value--xs').innerHTML = `${xsLabel}`;
                        label.querySelector('span.visually-hidden').innerHTML = `${value} ${label.getAttribute('data-option-key')}`;

                      }
                    }
                  }
                }
                if(radioButtonSticky && radioButtonSticky.get(0)){
                  radioButtonSticky.get(0).checked = true;
                }
              }
            }
              productJs.updateDiscountCodePrice(variant);
          

          //Filter The images by variant
          filterImages(variant, true, variantSwatchValue);

          //Update the variant value to add to cart
          item.find('#product-'+product.id+'-variant').val(variant.id);
          let cartText = 'SELECT ADD ON';
          if(item.parents('.product-wrap--quick-view-bundle').length && document.querySelector(`.pdp-bundles-callout #bundle-addon-${product.id}`))
          {
            cartText = 'SELECT BUNDLE';
          }
          item.siblings('.addon-add-btn').find('.content-available span').html(`${cartText} +${Shopify.formatMoney(variant.price, Simplistic.formatMoney).replace('.00', '').replace(' ','')}`);
          if(!item.closest(".cart-addons")){     
            item.siblings('.addon-add-btn').find('.content-available span').attr('onclick', `window.Branch.addons.quickViewHandleATC(${variant.id}, ${item.siblings('.addon-add-btn').find('.content-available span').attr('data-product-id')})`);
          }
          item.siblings('.addon-add-btn').find('.content-available span').attr('data-bundle-variant-id', variant.id);

        } else {
          item.find('#product-'+product.id+'-variant').val("");
        }
        updateButtons(variant);

        const pdpPrice = document.querySelector('#shopify-installments-wrapper__pdp > div > div');
        if (pdpPrice){
          pdpPrice.setAttribute('data-variant-id', variant.id)
        }
    

        $(item).trigger("variantChange", [variant]);

        var end = new Date().getTime();
        var time = end - start;
        console.log('Execution time: ' + time);

      }
    };

    var filterImages = function(variant, notSwitchImg, variantSwatchValue) {
      if(variant) {
        
        //Main image in product page

          productJs.filterThumbs(product.options, variant, item.find('.main-images'));

          productJs.saleTagUpdate(variant, variantSwatchValue);
      }
    };
    
    var updateButtons = function(variant) {
      var status;
      if(product.available) {
        status = variant ? variant.status : 'available';
      } else {
        status = 'soldout';
      }

      let variantOptionSelector = document.querySelector(`.options[data-quick-view="true"] .select-variant#product-select-${product.id} option[value="${variant.id}"]`)
      
      if(variantOptionSelector && variantOptionSelector.getAttribute('data-variant-avaiable') == "false"){
        status = 'soldout';
      }
      item.find('.buttons-wrapper .add-button, .buttons-wrapper .sold-out-button, .soldout-product-message').hide(); //Grid
      item.find('.content-available, .content-soldout').hide(); //Product page
      stickyATC.find('.content-available, .content-soldout').hide(); //Sticky
      mobileStickyAtc.find('.content-available, .content-soldout').hide(); //Mobile Sticky
      item.find('.quantity-box').removeClass('disabled'); //Product page
      if ($('.chat-with-sales-button').length) {
        switch(status) {
          case "available":
            item.find('.content-available').show(); //Product page
            item.parent('.product-wrap--quick-view').find('.addon-add-btn .content-soldout').hide(); //Grid
            item.parent('.product-wrap--quick-view').find('.addon-add-btn .content-available').show(); //Grid
            stickyATC.find('.content-available').show(); //Sticky
            mobileStickyAtc.find('.content-available').css("display", "flex") //Mobile Sticky
            item.find('.quantity-box').show(); //Product page
            break;
          case "soldout":

            item.find('.buttons-wrapper .add-button').prop("disabled",true);
            item.find('.soldout-product-message').show(); //Grid
            item.find('.quantity-box').hide(); //Product page
            if (item.parents('body.template-product-chat-with-sales').length == false) {
              item.find('.content-soldout').show(); //Product page
            }
            
            item.parent('.product-wrap--quick-view').find('.addon-add-btn .content-soldout').show(); //Grid
            item.parent('.product-wrap--quick-view').find('.addon-add-btn .content-available').hide(); //Grid
            stickyATC.find('.content-soldout').show(); //Sticky
            mobileStickyAtc.find('.content-soldout').css("display", "flex") //Mobile Sticky
            break;
        }
      }
      else {
        switch(status) {
          case "available":
            item.find('.buttons-wrapper .add-button').show(); //Grid
            item.find('.content-available').show(); //Product page
            item.parent('.product-wrap--quick-view').find('.addon-add-btn .content-soldout').hide(); //Grid
            item.parent('.product-wrap--quick-view').find('.addon-add-btn .content-available').show(); //Grid
            stickyATC.find('.content-available').show(); //Sticky
            mobileStickyAtc.find('.content-available').css("display", "flex"); //Mobile Sticky
            item.find('.quantity-box').removeClass('disabled'); //Product page
            break;
          case "soldout":
            item.find('.buttons-wrapper .sold-out-button').show(); //Grid
            item.find('.soldout-product-message').show(); //Grid
            item.find('.quantity-box').addClass('disabled'); //Product page
            item.find('.content-soldout').show(); //Product page
            item.parent('.product-wrap--quick-view').find('.addon-add-btn .content-soldout').show(); //Grid
            item.parent('.product-wrap--quick-view').find('.addon-add-btn .content-available').hide(); //Grid
            stickyATC.find('.content-soldout').show() //Sticky
            mobileStickyAtc.find('.content-soldout').css("display", "flex"); //Mobile Sticky
            break;
        }
      }
    };

  	var switchMainImage = function(mediaId){
        if(item.find('.productImageSwiper.swiper-initialized .main-images').length>0) {
          var index = item.find('.main-images .slide[data-media-id="'+mediaId+'"]').data('index');
          swiper.slideTo(index);
        }
    };

    var initSwiper = false;
    var swiper;

    var initQuickViewSwiper = false;
    var quickViewSwiper;

    var initGallery = function(type){
      var mainGalleryLoaded = false;

  
      var refreshSwiper = function(){
        if(window.innerWidth<=900) {
          if(initSwiper == false){
            if(type == 'main') {
              initSwiper = true;
              swiper = new Swiper(".productImageSwiper", {
                  pagination: {
                    el: ".swiper-pagination",
                    clickable: true,
                    renderBullet: function (index, className) {
                      return '<span class="' + className + '">' + "</span>";
                    },
                  },
                });   
            } 
          }
       
        } else {
          if(swiper && initSwiper && type == 'main'){
            swiper.destroy();
            document.querySelector('.productImageSwiper .swiper-wrapper').removeAttribute('style');
            initSwiper = false;  
          }    
           }

           if(initQuickViewSwiper == false && type !== 'main') {
            initQuickViewSwiper = true;
          
            quickViewSwiper = new Swiper(".product-wrap--quick-view .productImageSwiper", {
                pagination: {
                  el: ".product-wrap--quick-view .swiper-pagination",
                  clickable: true,
                  renderBullet: function (index, className) {
                    return '<span class="' + className + '">' + "</span>";
                  },
                },
              });   
          }
      };

      $(window).resize($.throttle(15, function(){
        refreshSwiper();
      }));
      
      refreshSwiper();

      Simplistic.onImagesLoaded(item.find('.main-images img'), function(){
        filterImages(productJs.getCurrentVariant(), true);
        mainGalleryLoaded = true;
        if(mainGalleryLoaded) {
        	item.trigger('galleryLoaded');
        }
      });

      //Initialize thumbs on main product page
      item.find('.thumbs.switch a.gallery').on('click', function(e) {
        e.preventDefault();
        switchMainImage($(this).data('media-id'));

        var variantId = $(this).attr('variant-id');
        if(variantId && variantId!='') {
          if(product.options.length <= 1) {
            productJs.setVariant(variantId);
          }
        }
      });
    

      //Initialize zoom on main product image
      if(item.find('.product-gallery').hasClass('zoom-in') && !isMobile.any) {
        item.find('.active-wrapper img').each(function(){
          var mainProductImage = $(this);
          if(mainProductImage.length > 0) {
            var zoomedSrc = $(this).attr('src').replace('_large', '');
            $(this).wrap('<span style="display:block"></span>').css('display', 'block').parent().zoom({
              url: zoomedSrc, 
              callback: function(){
                item.find('#active-wrapper img.zoomImg').prop('alt', '');
              } 
            });
          }
        });
      }

      // Initialize photoswipe on main product image
      if($('.active-wrapper a.productImage').length > 0) {
        item.find('.active-wrapper a.productImage').photoSwipe();
      }

      //Custom video play button for local videos only for desktop
      if ($('.product-gallery .video-wrap .custom-video-play').length > -1) {
          $('.product-gallery .video-wrap.local-video .custom-video-play').on('click',function(){
            $(this).siblings('video')[0].play();
            $(this).siblings('video').attr('controls', true);
            $(this).fadeOut();
          });
      }
      $('.product-gallery .video-wrap.local-video video').on("pause", function (e) {
          $(this)[0].pause();            
          $(this).removeAttr('controls');       
          $(this).siblings('.custom-video-play').fadeIn();
      });
      $('.product-gallery .video-wrap.local-video video').on("click", function () {
        if(!$(this)[0].paused){
          $(this)[0].pause();            
          $(this).removeAttr('controls');       
          $(this).siblings('.custom-video-play').fadeIn();                             
        }
      });

      //Custom youtube play button only for desktop
      if ($('.product-gallery .video-wrap.external-video .custom-video-play').length > -1) {
          $('.product-gallery .video-wrap.external-video .custom-video-play').on('click',function(){
            var self = $(this);
            // $(this).siblings('iframe')[0].src += "&autoplay=1";
            $(this).siblings('iframe').find('.ytp-large-play-button').click();
            setTimeout(function(){
              self.remove();
            },700);
          });
      }
    }

    var updateOptionsInSelector = function(selectorIndex) {
      switch (selectorIndex) {
          case 0:
              var key = "root";
              var selector = item.find(".single-option-selector:eq(0)");
              break;
          case 1:
              var key = item.find(".single-option-selector:eq(0)").val();
              var selector = item.find(".single-option-selector:eq(1)");
              break;
          case 2:
              var key = item.find(".single-option-selector:eq(0)").val();
              key += " / " + item.find(".single-option-selector:eq(1)").val();
              var selector = item.find(".single-option-selector:eq(2)")
      }
      var initialValue = selector.val();
      selector.empty();
      var options = optionsMapAll[key];
      if (options) {
          for (var i = 0; i < options.length; i++) {
              var option = options[i];
              var newOption = jQuery("<option></option>").val(option).html(option);
              selector.append(newOption)
          }
      }
      var availableOptions = optionsMap[key];
      var existingOptions = optionsMapAll[key];

      


      item.find('.swatch[data-option-index="' + selectorIndex + '"] .swatch-element').each(function() {
          if (jQuery.inArray($(this).attr("data-value"), existingOptions) !== -1) {
            $(this).off();
              if (jQuery.inArray($(this).attr("data-value"), availableOptions) !== -1) {
                  $(this).removeClass("soldout").find(":radio").removeAttr("checked");
                  $(this).find('.tooltip').text(`${$(this).attr("data-value")}`);
              } else {
                  if (item.parents('.template-product-chat-with-sales').length == false) {
                    $(this).addClass("soldout").find(":radio").removeAttr("checked");
                    $(this).find('.tooltip').text('Out of stock');
                   }

                  if(window.Branch.product.isTouchDevice()){
                    $(this).on('click', function(){
                      $(this).find('.tooltip').addClass('mobile-display');
                      let tooltip = $(this).find('.tooltip');
                      setTimeout(function(){ 
                        tooltip.removeClass('mobile-display');
                      }, 2000)
                    })
                  }
              }
              $(this).find('input').prop('disabled', false);
              $(this).removeClass("option-not-available");
          } else {
              $(this).find('input').prop('disabled', true)
              $(this).find('.tooltip').text('Not available')
              $(this).addClass("option-not-available");
              if(window.Branch.product.isTouchDevice()){
                $(this).on('click', function(){
                  $(this).find('.tooltip').addClass('mobile-display');
                  let tooltip = $(this).find('.tooltip');
                  setTimeout(function(){ 
                    tooltip.removeClass('mobile-display');
                  }, 2000)
                });
              }
          }
      });
      stickyATC.find('.swatch[data-option-index="' + selectorIndex + '"] .swatch-element').each(function() {
        if (jQuery.inArray($(this).attr("data-value"), existingOptions) !== -1) {
          $(this).off();
            if (jQuery.inArray($(this).attr("data-value"), availableOptions) !== -1) {
                $(this).removeClass("soldout").find(":radio").removeAttr("checked");
                $(this).find('.tooltip').text(`${$(this).attr("data-value")}`);
            } else {
                if (item.parents('.template-product-chat-with-sales').length == false) {
                  $(this).addClass("soldout").find(":radio").removeAttr("checked");
                  $(this).find('.tooltip').text('Out of stock');
                 }

                if(window.Branch.product.isTouchDevice()){
                  $(this).on('click', function(){
                    $(this).find('.tooltip').addClass('mobile-display');
                    let tooltip = $(this).find('.tooltip');
                    setTimeout(function(){ 
                      tooltip.removeClass('mobile-display');
                    }, 2000)
                  })
                }
            }
            $(this).find('input').prop('disabled', false);
            $(this).removeClass("option-not-available");
        } else {
            $(this).find('input').prop('disabled', true)
            $(this).find('.tooltip').text('Not available')
            $(this).addClass("option-not-available");
            if(window.Branch.product.isTouchDevice()){
              $(this).on('click', function(){
                $(this).find('.tooltip').addClass('mobile-display');
                let tooltip = $(this).find('.tooltip');
                setTimeout(function(){ 
                  tooltip.removeClass('mobile-display');
                }, 2000)
              });
            }
        }
      });

      /* new sticky atc */

      mobileStickyAtc.find('.swatch-dropdown__sliding-option-selector-outer-container[data-option-index="' + selectorIndex + '"] .swatch-dropdown__sliding-option-selector-element').each(function() {
        let label = document.querySelectorAll('.swatch-dropdown')[selectorIndex].querySelector('.swatch-dropdown__bar-label');
        let match = this.getAttribute('data-key') == label.getAttribute('data-option-key') && this.getAttribute('data-value').replace(" ", "-").toLowerCase() == label.getAttribute('data-option-value');
        if (jQuery.inArray($(this).attr("data-value"), existingOptions) !== -1) {
          $(this).off();
            if (jQuery.inArray($(this).attr("data-value"), availableOptions) !== -1) {
                $(this).removeClass("soldout").find(":radio").removeAttr("checked");
              
                label.setAttribute('data-availability', 'available');
            } else {
              if (item.parents('.template-product-chat-with-sales').length == false) {
                $(this).addClass("soldout").find(":radio").removeAttr("checked");  
                label.setAttribute('data-availability', 'soldout');
              }
            }
            $(this).find('input').prop('disabled', false);
            $(this).removeClass("option-not-available");
            label.setAttribute('data-availability', 'available');
        } else {
            $(this).find('input').prop('disabled', true)
            $(this).addClass("option-not-available");
            label.setAttribute('data-availability', 'option-not-available');
        }
      });

      /* end new sticky atc */

      if (jQuery.inArray(initialValue, availableOptions) !== -1) {
          selector.val(initialValue)
      }
      // selector.trigger("change")
  };
  var linkOptionSelectors = function(product) {
      for (var i = 0; i < product.variants.length; i++) {
          var variant = product.variants[i];
          optionsMapAll.root = optionsMapAll.root || [];
          optionsMapAll.root.push(variant.option1);
          optionsMapAll.root = Shopify.uniq(optionsMapAll.root);
          if (product.options.length > 1) {
              var key = variant.option1;
              optionsMapAll[key] = optionsMapAll[key] || [];
              optionsMapAll[key].push(variant.option2);
              optionsMapAll[key] = Shopify.uniq(optionsMapAll[key])
          }
          if (product.options.length === 3) {
              var key = variant.option1 + " / " + variant.option2;
              optionsMapAll[key] = optionsMapAll[key] || [];
              optionsMapAll[key].push(variant.option3);
              optionsMapAll[key] = Shopify.uniq(optionsMapAll[key])
          }
          if (variant.available) {
              optionsMap.root = optionsMap.root || [];
              optionsMap.root.push(variant.option1);
              optionsMap.root = Shopify.uniq(optionsMap.root);
              if (product.options.length > 1) {
                  var key = variant.option1;
                  optionsMap[key] = optionsMap[key] || [];
                  optionsMap[key].push(variant.option2);
                  optionsMap[key] = Shopify.uniq(optionsMap[key])
              }
              if (product.options.length === 3) {
                  var key = variant.option1 + " / " + variant.option2;
                  optionsMap[key] = optionsMap[key] || [];
                  optionsMap[key].push(variant.option3);
                  optionsMap[key] = Shopify.uniq(optionsMap[key])
              }
          }
      }
      updateOptionsInSelector(0);
      if (product.options.length > 1) updateOptionsInSelector(1);
      if (product.options.length === 3) updateOptionsInSelector(2);
      item.find(".single-option-selector:eq(0)").change(function() {
          updateOptionsInSelector(1);
          if (product.options.length === 3) updateOptionsInSelector(2);
          return !0
      });
      item.find(".single-option-selector:eq(1)").change(function() {
          if (product.options.length === 3) updateOptionsInSelector(2);
          return !0
      })
  }

  const shiftCustomColorSwatchOptions = function(){
    let customColorSwatch  = document.querySelector('.templateProduct #hide-from-specs-tab .swatch.color[data-custom-color-swatch-option="true"]');
    let customColorSwatchNewContainer = document.querySelector('.templateProduct #hide-from-specs-tab .swatch.color[data-custom-color-swatch-option="true"] .custom-color-swatch-option__new-swatch-container')
    if(customColorSwatch){
      let customColorSwatchOptions = customColorSwatch.getAttribute('data-custom-options-list').split(',');
      let customColorSwatches = [];
      if(customColorSwatchOptions.length > 0){
        customColorSwatchOptions.forEach((name) => {
          if(customColorSwatch.querySelector(`.swatch-element.color label.color-${name.replaceAll('/', '-')}`)){
            customColorSwatches.push(customColorSwatch.querySelector(`.swatch-element.color label.color-${name.replaceAll('/', '-')}`).parentElement)
          }
        })
        if(customColorSwatches.length > 0){
          customColorSwatches.forEach((singleSwatch) => {
            customColorSwatchNewContainer.appendChild(singleSwatch);
          })
        }
      }

    }
  }

  const refreshSwatches = function(){
    let screenWidth = (window.innerWidth > 0) ? parseInt(window.innerWidth) : parseInt(screen.width);
    var maxWidth;
    let swatchWidth = 50;
    let customColorSwatchOption  = document.querySelector('.templateProduct #hide-from-specs-tab .swatch.color[data-custom-color-swatch-option="true"]');
    let colorSwatches = document.querySelectorAll('.templateProduct #hide-from-specs-tab .swatch.color');
    if(colorSwatches.length > 0){
     colorSwatches.forEach((colorSwatch, index) => {
        if(index < 2){
          colorSwatch.setAttribute('style', '');
          colorSwatch.querySelector('.variants-wrap').setAttribute('style', '');
        }
      }); 
      if(screenWidth > 1280){
        maxWidth = 0.9 * (0.885 * (((screenWidth * 0.95) * 0.45) - (14 * 4)));
      }
      else if(screenWidth > 900 && screenWidth < 1281){
        maxWidth = 0.9 * 420;
      } else {
        maxWidth = 0.9 * (screenWidth - (3 * 14));
      }
      let maxSwatchesPerRow = Math.floor(maxWidth / swatchWidth);

      if(colorSwatches.length == 1){
        colorSwatches[0].setAttribute('style', 'min-width: 100%');
        if(customColorSwatchOption){
          let regularSwatchContainer = customColorSwatchOption.querySelector(".custom-color-swatch-option__regular-swatch-container");
          let newSwatchContainer = customColorSwatchOption.querySelector(".custom-color-swatch-option__new-swatch-container");
          let colorSwatchesWithinNew = customColorSwatchOption.getAttribute('data-custom-options-list').split(',').length;
          let colorSwatchesWithinRegular = customColorSwatchOption.querySelectorAll('.swatch-element.color').length - colorSwatchesWithinNew;
          let totalSwatchCount = colorSwatchesWithinRegular + colorSwatchesWithinNew;
          maxWidth = maxWidth - (16 / 2);
          let maxPerRow = 2 * Math.floor((maxWidth / swatchWidth) / 2);
          if(maxPerRow > totalSwatchCount){
            regularSwatchContainer.setAttribute('style', `width: ${(swatchWidth * colorSwatchesWithinRegular) + 2}px`);
            customColorSwatchOption.querySelector('.custom-color-swatch-option__existing-title').setAttribute('style', `width: ${(swatchWidth * colorSwatchesWithinRegular) + 2}px`)

            newSwatchContainer.setAttribute('style', `width: ${(swatchWidth * colorSwatchesWithinNew) + 16}px`);
            customColorSwatchOption.querySelector('.custom-color-swatch-option__new-title').setAttribute('style', `width: ${(swatchWidth * colorSwatchesWithinNew) + 16}px`);
          } else {
            let maxPerSubRow = (totalSwatchCount / 2) - (totalSwatchCount % ((totalSwatchCount / 2)))
            console.log('maxPerSubRow', maxPerSubRow)
            regularSwatchContainer.setAttribute('style', `width: ${(swatchWidth * (maxPerRow / 2)) + 2}px`);
            customColorSwatchOption.querySelector('.custom-color-swatch-option__existing-title').setAttribute('style', `width: ${(swatchWidth * (maxPerRow / 2)) + 2}px`)

            newSwatchContainer.setAttribute('style', `width: ${(swatchWidth * (maxPerRow / 2)) + 16}px`);
            customColorSwatchOption.querySelector('.custom-color-swatch-option__new-title').setAttribute('style', `width: ${(swatchWidth * (maxPerRow / 2)) + 16}px`);

          }
        }
      } else if (colorSwatches.length > 1) {
        if(customColorSwatchOption){
          colorSwatches.forEach((colorSwatch, index) => {
            if(index < 2){
              colorSwatch.setAttribute('style', 'min-width: 100%');
            }
          });
          let regularSwatchContainer = customColorSwatchOption.querySelector(".custom-color-swatch-option__regular-swatch-container");
          let newSwatchContainer = customColorSwatchOption.querySelector(".custom-color-swatch-option__new-swatch-container");
          let colorSwatchesWithinNew = customColorSwatchOption.getAttribute('data-custom-options-list').split(',').length;
          let colorSwatchesWithinRegular = customColorSwatchOption.querySelectorAll('.swatch-element.color').length - colorSwatchesWithinNew;
          let totalSwatchCount = colorSwatchesWithinRegular + colorSwatchesWithinNew;
          maxWidth = maxWidth - 16;
          let maxPerRow = maxWidth / swatchWidth;
          if(maxPerRow > totalSwatchCount){
            regularSwatchContainer.setAttribute('style', `width: ${(swatchWidth * colorSwatchesWithinRegular) + 2}px`);
            customColorSwatchOption.querySelector('.custom-color-swatch-option__existing-title').setAttribute('style', `width: ${(swatchWidth * colorSwatchesWithinRegular) + 2}px`)
            
            newSwatchContainer.setAttribute('style', `width: ${(swatchWidth * colorSwatchesWithinNew) + 16}px`);
            customColorSwatchOption.querySelector('.custom-color-swatch-option__new-title').setAttribute('style', `width: ${(swatchWidth * colorSwatchesWithinNew) + 16}px`);
          } else {
            let regularRows = Math.ceil(colorSwatchesWithinRegular / maxPerRow);
            let regularSwatchesHaveLabels = regularSwatchContainer.querySelectorAll('.swatch-element--label').length > 0 ? true : false;
            let labelsHeight = regularSwatchesHaveLabels ? 19.6 : 0;
            regularSwatchContainer.setAttribute('style', `width: 100%; border: 0;`);
            customColorSwatchOption.querySelector('.custom-color-swatch-option__existing-title').setAttribute('style', `width: 100%; border: 0`)
            

            newSwatchContainer.setAttribute('style', `width: 100%; padding-left: 0; padding-top: 28px;`);
            customColorSwatchOption.querySelector('.custom-color-swatch-option__new-title').setAttribute('style', `width: 100%; padding-left: 0; position: absolute; top: ${(regularRows * 47) + (regularRows * labelsHeight) + (2* 28)}px`);
          }

        } else {
          let swatchCount = 0;
          colorSwatches.forEach((colorSwatch, index) => {
            if(index < 2){
              let colorSwatchesWithin = colorSwatch.querySelectorAll('.swatch-element.color').length;
              swatchCount = swatchCount + colorSwatchesWithin;
            }
          });
          if(maxSwatchesPerRow < swatchCount){
            colorSwatches.forEach((colorSwatch, index) => {
              if(index < 2){
                colorSwatch.setAttribute('style', 'min-width: 100%');
              }
            });
          } else {
            colorSwatches.forEach((colorSwatch, index) => {
              if(index < 2){
                colorSwatch.setAttribute('style', 'min-width: auto');
                colorSwatch.querySelector('.variants-wrap').setAttribute('style', 'flex-wrap: nowrap');
              }
            });
          }
        }
      }
    }
  };

  $(window).load(function() {
    refreshSwatches();
    shiftCustomColorSwatchOptions();
  })

  $(window).resize($.throttle(150, function(){
    refreshSwatches();
  }));

  return init();    
};
